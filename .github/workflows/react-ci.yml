name: React-CI

on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]

env:
  PROJ_DIR_FE: ./dislinkt-fe
  DOCKERHUB_REPO_FE: ${{ secrets.DOCKERHUB_USERNAME }}/dislinkt-front

jobs:
  ci-pipe:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Lint commit messages
        uses: wagoid/commitlint-github-action@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'
          cache-dependency-path: ${{ env.PROJ_DIR_FE }}
          registry-url: 'https://npm.pkg.github.com'
      - name: Build with NPM - FE
        working-directory: ${{ env.PROJ_DIR_FE }}
        run: |
          npm ci
          npm run build --if-present

      - name: Create a Release
        id: version
        if: github.event_name == 'push'
        run: |
          npm install semantic-release
          npm install semantic-release-export-data
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish packages to GPR
        if: github.event_name == 'push'
        run: |
          cd ${{ env.PROJ_DIR_FE }}
          npm version ${{ steps.version.outputs.new-release-version }}
          npm publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        if: github.event_name == 'push'
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build FE image and push to Docker Hub
        if: github.event_name == 'push'
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.PROJ_DIR_FE }}
          tags: ${{ env.DOCKERHUB_REPO_FE }}:latest, ${{ env.DOCKERHUB_REPO_FE }}:${{ steps.version.outputs.new-release-version }}
          push: true
          cache-from: type=registry,ref=${{ env.DOCKERHUB_REPO_FE }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKERHUB_REPO_FE }}:buildcache,mode=max
